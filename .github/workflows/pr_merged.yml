name: 'Docker & AWS 배포'

on:
  pull_request:
    types:
      - closed # PR이 닫혔을 때

jobs:
  deploy:
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    permissions:
      id-token: write # AWS 자격 증명 구성을 위해 필요한 권한
    steps:
      - name: 'Git checkout' # Git 체크아웃
        uses: actions/checkout@v4.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }} # 실제 PR 커밋을 체크아웃 (머지 커밋이 아님)
          fetch-depth: 0 # PR 분석을 위해 전체 기록을 가져옴
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Build and push Docker images'
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: infra/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api-server:latest
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: 'Create docker-compose .env file'
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> infra/.env
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> infra/.env
          echo "SPRING_PROFILES_ACTIVE=${{ github.ref_name }}" >> infra/.env
          echo "JASYPT_ENCRYPTOR_PASSWORD=${{ secrets.JASYPT_ENCRYPTOR_PASSWORD }}" >> infra/.env
      - name: 'Upload to S3 for AWS CodeDeploy Required Files'
        run: |
          zip -r deploy.zip infra/scripts infra/.env infra/docker-compose.yml infra/appspec.yml
          aws s3 cp --acl private ./deploy.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/deploy.zip
      - name: 'Deploy to AWS CodeDeploy'
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.AWS_CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.AWS_CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},key=deploy.zip,bundleType=zip