name: Qodana

on:
  workflow_dispatch:
  pull_request:
  push:
    branches: # Specify your branches here
      - main # The 'main' branch
      - 'releases/*' # The release branches
      - '#15-cicd' # Temporary branches

env:
  APP_NAME: 'api-server'

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
      checks: write
      id-token: write # aws-actions/configure-aws-credentials@v4 사용 시 필요
    steps:
      - uses: actions/checkout@v4.2.0
        with:
          ref: ${{ github.event.pull_request.head.sha }}  # to check out the actual pull request commit, not the merge commit
          fetch-depth: 0  # a full history is required for pull request analysis
#      - name: 'Qodana Scan'
#        uses: JetBrains/qodana-action@v2024.1.9
#        with:
#          pr-mode: false
#        env:
#          QODANA_TOKEN: ${{ secrets.QODANA_TOKEN_1109214742 }}
#          QODANA_ENDPOINT: 'https://qodana.cloud'
      - name: 'Login to Docker Hub'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: 'Build and push Docker images'
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: infra/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/api-server:latest
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
      - name: 'Upload to S3 for aws codedeploy'
        run: |
          zip -r deploy.zip infra/scripts infra/appspec.yml
          aws s3 cp --acl private ./deploy.zip s3://${{ secrets.AWS_S3_BUCKET_NAME }}/deploy.zip
      - name: 'Deploy to AWS CodeDeploy'
        run: |
          aws deploy create-deployment \
            --application-name ${{ secrets.AWS_CODEDEPLOY_APPLICATION_NAME }} \
            --deployment-group-name ${{ secrets.AWS_CODEDEPLOY_DEPLOYMENT_GROUP_NAME }} \
            --s3-location bucket=${{ secrets.AWS_S3_BUCKET_NAME }},key=infra.zip,bundleType=zip